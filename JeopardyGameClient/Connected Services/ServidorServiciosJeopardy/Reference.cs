//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeopardyGame.ServidorServiciosJeopardy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class UserPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfint", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((this.ObjectSavedField.Equals(value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserValidate", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class UserValidate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfFriendInfoxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfFriendInfoxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.FriendInfo[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.FriendInfo[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendInfo", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial struct FriendInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdStatus {
            get {
                return this.IdStatusField;
            }
            set {
                if ((this.IdStatusField.Equals(value) != true)) {
                    this.IdStatusField = value;
                    this.RaisePropertyChanged("IdStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfUserPOJOxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfUserPOJOxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.UserPOJO ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.UserPOJO ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfPlayerPOJOxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfPlayerPOJOxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.PlayerPOJO ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.PlayerPOJO ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeneralPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdActualAvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoReportsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GeneralPoints {
            get {
                return this.GeneralPointsField;
            }
            set {
                if ((this.GeneralPointsField.Equals(value) != true)) {
                    this.GeneralPointsField = value;
                    this.RaisePropertyChanged("GeneralPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdActualAvatar {
            get {
                return this.IdActualAvatarField;
            }
            set {
                if ((this.IdActualAvatarField.Equals(value) != true)) {
                    this.IdActualAvatarField = value;
                    this.RaisePropertyChanged("IdActualAvatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdState {
            get {
                return this.IdStateField;
            }
            set {
                if ((this.IdStateField.Equals(value) != true)) {
                    this.IdStateField = value;
                    this.RaisePropertyChanged("IdState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoReports {
            get {
                return this.NoReportsField;
            }
            set {
                if ((this.NoReportsField.Equals(value) != true)) {
                    this.NoReportsField = value;
                    this.RaisePropertyChanged("NoReports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfPlayerInLobbyxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.PlayerInLobby[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.PlayerInLobby[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInLobby", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial struct PlayerInLobby : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumPlayers {
            get {
                return this.NumPlayersField;
            }
            set {
                if ((this.NumPlayersField.Equals(value) != true)) {
                    this.NumPlayersField = value;
                    this.RaisePropertyChanged("NumPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Side {
            get {
                return this.SideField;
            }
            set {
                if ((this.SideField.Equals(value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SaveUser", ReplyAction="http://tempuri.org/IUserManager/SaveUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SaveUser(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SaveUser", ReplyAction="http://tempuri.org/IUserManager/SaveUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SaveUserAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/validateCredentials", ReplyAction="http://tempuri.org/IUserManager/validateCredentialsResponse")]
        int validateCredentials(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/validateCredentials", ReplyAction="http://tempuri.org/IUserManager/validateCredentialsResponse")]
        System.Threading.Tasks.Task<int> validateCredentialsAsync(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EmailAlreadyExist", ReplyAction="http://tempuri.org/IUserManager/EmailAlreadyExistResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint EmailAlreadyExist(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EmailAlreadyExist", ReplyAction="http://tempuri.org/IUserManager/EmailAlreadyExistResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> EmailAlreadyExistAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UserNameAlreadyExist", ReplyAction="http://tempuri.org/IUserManager/UserNameAlreadyExistResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UserNameAlreadyExist(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UserNameAlreadyExist", ReplyAction="http://tempuri.org/IUserManager/UserNameAlreadyExistResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UserNameAlreadyExistAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SentEmailCodeConfirmation", ReplyAction="http://tempuri.org/IUserManager/SentEmailCodeConfirmationResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailCodeConfirmation(string email, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SentEmailCodeConfirmation", ReplyAction="http://tempuri.org/IUserManager/SentEmailCodeConfirmationResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailCodeConfirmationAsync(string email, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateUserInformation", ReplyAction="http://tempuri.org/IUserManager/UpdateUserInformationResponse")]
        int UpdateUserInformation(string editedName, string originalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateUserInformation", ReplyAction="http://tempuri.org/IUserManager/UpdateUserInformationResponse")]
        System.Threading.Tasks.Task<int> UpdateUserInformationAsync(string editedName, string originalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetFriendScores", ReplyAction="http://tempuri.org/IUserManager/GetFriendScoresResponse")]
        JeopardyGame.ServidorServiciosJeopardy.FriendScore[] GetFriendScores(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetFriendScores", ReplyAction="http://tempuri.org/IUserManager/GetFriendScoresResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.FriendScore[]> GetFriendScoresAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : JeopardyGame.ServidorServiciosJeopardy.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IUserManager>, JeopardyGame.ServidorServiciosJeopardy.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SaveUser(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew) {
            return base.Channel.SaveUser(userPojoNew);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SaveUserAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew) {
            return base.Channel.SaveUserAsync(userPojoNew);
        }
        
        public int validateCredentials(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate) {
            return base.Channel.validateCredentials(newUserValidate);
        }
        
        public System.Threading.Tasks.Task<int> validateCredentialsAsync(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate) {
            return base.Channel.validateCredentialsAsync(newUserValidate);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint EmailAlreadyExist(string email) {
            return base.Channel.EmailAlreadyExist(email);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> EmailAlreadyExistAsync(string email) {
            return base.Channel.EmailAlreadyExistAsync(email);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UserNameAlreadyExist(string userName) {
            return base.Channel.UserNameAlreadyExist(userName);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UserNameAlreadyExistAsync(string userName) {
            return base.Channel.UserNameAlreadyExistAsync(userName);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailCodeConfirmation(string email, string subject, string body) {
            return base.Channel.SentEmailCodeConfirmation(email, subject, body);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailCodeConfirmationAsync(string email, string subject, string body) {
            return base.Channel.SentEmailCodeConfirmationAsync(email, subject, body);
        }
        
        public int UpdateUserInformation(string editedName, string originalName) {
            return base.Channel.UpdateUserInformation(editedName, originalName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserInformationAsync(string editedName, string originalName) {
            return base.Channel.UpdateUserInformationAsync(editedName, originalName);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.FriendScore[] GetFriendScores(int userId) {
            return base.Channel.GetFriendScores(userId);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.FriendScore[]> GetFriendScoresAsync(int userId) {
            return base.Channel.GetFriendScoresAsync(userId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IFriendsManager")]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUserFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetUserFriendsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUserFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUserFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetUserFriendsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUserFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUserFriendRequests", ReplyAction="http://tempuri.org/IFriendsManager/GetUserFriendRequestsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUserFriendRequests(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUserFriendRequests", ReplyAction="http://tempuri.org/IFriendsManager/GetUserFriendRequestsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUserFriendRequestsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUsersNotFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetUsersNotFriendsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUsersNotFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetUsersNotFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetUsersNotFriendsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUsersNotFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : JeopardyGame.ServidorServiciosJeopardy.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IFriendsManager>, JeopardyGame.ServidorServiciosJeopardy.IFriendsManager {
        
        public FriendsManagerClient() {
        }
        
        public FriendsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUserFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriends(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUserFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendsAsync(user);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUserFriendRequests(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendRequests(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUserFriendRequestsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendRequestsAsync(user);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4 GetUsersNotFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUsersNotFriends(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendInfoxY0a3WX4> GetUsersNotFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUsersNotFriendsAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IConsultInformation")]
    public interface IConsultInformation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserById", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByIdResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserById(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserById", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByIdResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserByIdPlayer", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByIdPlayerResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByIdPlayer(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserByIdPlayer", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByIdPlayerResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdPlayerAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultPlayerById", ReplyAction="http://tempuri.org/IConsultInformation/ConsultPlayerByIdResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerById(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultPlayerById", ReplyAction="http://tempuri.org/IConsultInformation/ConsultPlayerByIdResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultPlayerByIdUser", ReplyAction="http://tempuri.org/IConsultInformation/ConsultPlayerByIdUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerByIdUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultPlayerByIdUser", ReplyAction="http://tempuri.org/IConsultInformation/ConsultPlayerByIdUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserByUserName", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByUserNameResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultInformation/ConsultUserByUserName", ReplyAction="http://tempuri.org/IConsultInformation/ConsultUserByUserNameResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByUserNameAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsultInformationChannel : JeopardyGame.ServidorServiciosJeopardy.IConsultInformation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultInformationClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IConsultInformation>, JeopardyGame.ServidorServiciosJeopardy.IConsultInformation {
        
        public ConsultInformationClient() {
        }
        
        public ConsultInformationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultInformationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultInformationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultInformationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserById(int idUser) {
            return base.Channel.ConsultUserById(idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdAsync(int idUser) {
            return base.Channel.ConsultUserByIdAsync(idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByIdPlayer(int idPlayer) {
            return base.Channel.ConsultUserByIdPlayer(idPlayer);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdPlayerAsync(int idPlayer) {
            return base.Channel.ConsultUserByIdPlayerAsync(idPlayer);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerById(int idPlayer) {
            return base.Channel.ConsultPlayerById(idPlayer);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdAsync(int idPlayer) {
            return base.Channel.ConsultPlayerByIdAsync(idPlayer);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerByIdUser(int idUser) {
            return base.Channel.ConsultPlayerByIdUser(idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdUserAsync(int idUser) {
            return base.Channel.ConsultPlayerByIdUserAsync(idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByUserName(string userName) {
            return base.Channel.ConsultUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByUserNameAsync(string userName) {
            return base.Channel.ConsultUserByUserNameAsync(userName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.INotifyUserAvailability", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailabilityCallback))]
    public interface INotifyUserAvailability {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsAvailable")]
        void PlayerIsAvailable(int idUser, int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsAvailable")]
        System.Threading.Tasks.Task PlayerIsAvailableAsync(int idUser, int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsNotAvailable")]
        void PlayerIsNotAvailable(int idUser, int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsNotAvailable")]
        System.Threading.Tasks.Task PlayerIsNotAvailableAsync(int idUser, int idPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserAvailabilityCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserAvailability/Response", ReplyAction="http://tempuri.org/INotifyUserAvailability/ResponseResponse")]
        void Response(int status, int idFriend);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserAvailabilityChannel : JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotifyUserAvailabilityClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability>, JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability {
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void PlayerIsAvailable(int idUser, int idPlayer) {
            base.Channel.PlayerIsAvailable(idUser, idPlayer);
        }
        
        public System.Threading.Tasks.Task PlayerIsAvailableAsync(int idUser, int idPlayer) {
            return base.Channel.PlayerIsAvailableAsync(idUser, idPlayer);
        }
        
        public void PlayerIsNotAvailable(int idUser, int idPlayer) {
            base.Channel.PlayerIsNotAvailable(idUser, idPlayer);
        }
        
        public System.Threading.Tasks.Task PlayerIsNotAvailableAsync(int idUser, int idPlayer) {
            return base.Channel.PlayerIsNotAvailableAsync(idUser, idPlayer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.INotifyUserActionFriendsManager", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.INotifyUserActionFriendsManagerCallback))]
    public interface INotifyUserActionFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserActionFriendsManager/RegisterFriendManagerUser", ReplyAction="http://tempuri.org/INotifyUserActionFriendsManager/RegisterFriendManagerUserRespo" +
            "nse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint RegisterFriendManagerUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserActionFriendsManager/RegisterFriendManagerUser", ReplyAction="http://tempuri.org/INotifyUserActionFriendsManager/RegisterFriendManagerUserRespo" +
            "nse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> RegisterFriendManagerUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/UnregisterFriendManagerUser")]
        void UnregisterFriendManagerUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/UnregisterFriendManagerUser")]
        System.Threading.Tasks.Task UnregisterFriendManagerUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/ReportPlayer")]
        void ReportPlayer(int idUser, string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/ReportPlayer")]
        System.Threading.Tasks.Task ReportPlayerAsync(int idUser, string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/EliminateUserFromFriends")]
        void EliminateUserFromFriends(int idUser1, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/EliminateUserFromFriends")]
        System.Threading.Tasks.Task EliminateUserFromFriendsAsync(int idUser1, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/SendFriendRequest")]
        void SendFriendRequest(int idUser, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/SendFriendRequest")]
        System.Threading.Tasks.Task SendFriendRequestAsync(int idUser, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/AcceptFriendRequest")]
        void AcceptFriendRequest(int idUser, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/AcceptFriendRequest")]
        System.Threading.Tasks.Task AcceptFriendRequestAsync(int idUser, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/DeclineFriendRequest")]
        void DeclineFriendRequest(int idUser, int idUser2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserActionFriendsManager/DeclineFriendRequest")]
        System.Threading.Tasks.Task DeclineFriendRequestAsync(int idUser, int idUser2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserActionFriendsManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserActionFriendsManager/ResponseReported", ReplyAction="http://tempuri.org/INotifyUserActionFriendsManager/ResponseReportedResponse")]
        void ResponseReported(int numReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserActionFriendsManager/ResponseEliminationFromFriends" +
            "", ReplyAction="http://tempuri.org/INotifyUserActionFriendsManager/ResponseEliminationFromFriends" +
            "Response")]
        void ResponseEliminationFromFriends(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserActionFriendsManager/ResponseResquestAction", ReplyAction="http://tempuri.org/INotifyUserActionFriendsManager/ResponseResquestActionResponse" +
            "")]
        void ResponseResquestAction(int idUser, int requestStatus, string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserActionFriendsManagerChannel : JeopardyGame.ServidorServiciosJeopardy.INotifyUserActionFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotifyUserActionFriendsManagerClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.INotifyUserActionFriendsManager>, JeopardyGame.ServidorServiciosJeopardy.INotifyUserActionFriendsManager {
        
        public NotifyUserActionFriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NotifyUserActionFriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NotifyUserActionFriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserActionFriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserActionFriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint RegisterFriendManagerUser(int idUser) {
            return base.Channel.RegisterFriendManagerUser(idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> RegisterFriendManagerUserAsync(int idUser) {
            return base.Channel.RegisterFriendManagerUserAsync(idUser);
        }
        
        public void UnregisterFriendManagerUser(int idUser) {
            base.Channel.UnregisterFriendManagerUser(idUser);
        }
        
        public System.Threading.Tasks.Task UnregisterFriendManagerUserAsync(int idUser) {
            return base.Channel.UnregisterFriendManagerUserAsync(idUser);
        }
        
        public void ReportPlayer(int idUser, string userName) {
            base.Channel.ReportPlayer(idUser, userName);
        }
        
        public System.Threading.Tasks.Task ReportPlayerAsync(int idUser, string userName) {
            return base.Channel.ReportPlayerAsync(idUser, userName);
        }
        
        public void EliminateUserFromFriends(int idUser1, int idUser2) {
            base.Channel.EliminateUserFromFriends(idUser1, idUser2);
        }
        
        public System.Threading.Tasks.Task EliminateUserFromFriendsAsync(int idUser1, int idUser2) {
            return base.Channel.EliminateUserFromFriendsAsync(idUser1, idUser2);
        }
        
        public void SendFriendRequest(int idUser, int idUser2) {
            base.Channel.SendFriendRequest(idUser, idUser2);
        }
        
        public System.Threading.Tasks.Task SendFriendRequestAsync(int idUser, int idUser2) {
            return base.Channel.SendFriendRequestAsync(idUser, idUser2);
        }
        
        public void AcceptFriendRequest(int idUser, int idUser2) {
            base.Channel.AcceptFriendRequest(idUser, idUser2);
        }
        
        public System.Threading.Tasks.Task AcceptFriendRequestAsync(int idUser, int idUser2) {
            return base.Channel.AcceptFriendRequestAsync(idUser, idUser2);
        }
        
        public void DeclineFriendRequest(int idUser, int idUser2) {
            base.Channel.DeclineFriendRequest(idUser, idUser2);
        }
        
        public System.Threading.Tasks.Task DeclineFriendRequestAsync(int idUser, int idUser2) {
            return base.Channel.DeclineFriendRequestAsync(idUser, idUser2);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.ILobbyActions", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.ILobbyActionsCallback))]
    public interface ILobbyActions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/CreateNewLobby", ReplyAction="http://tempuri.org/ILobbyActions/CreateNewLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint CreateNewLobby(int RoomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/CreateNewLobby", ReplyAction="http://tempuri.org/ILobbyActions/CreateNewLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> CreateNewLobbyAsync(int RoomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobby", ReplyAction="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 GetAllCurrentPlayerInLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobby", ReplyAction="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4> GetAllCurrentPlayerInLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/DissolveLobby")]
        void DissolveLobby(int RoomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/DissolveLobby")]
        System.Threading.Tasks.Task DissolveLobbyAsync(int RoomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/joinLobby", ReplyAction="http://tempuri.org/ILobbyActions/joinLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint joinLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/joinLobby", ReplyAction="http://tempuri.org/ILobbyActions/joinLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> joinLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/NotifyPlayerInlobby")]
        void NotifyPlayerInlobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/NotifyPlayerInlobby")]
        System.Threading.Tasks.Task NotifyPlayerInlobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/leaveLobby")]
        void leaveLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/leaveLobby")]
        System.Threading.Tasks.Task leaveLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/ChangePlayerSide")]
        void ChangePlayerSide(int RoomCode, int idUser, int side);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/ChangePlayerSide")]
        System.Threading.Tasks.Task ChangePlayerSideAsync(int RoomCode, int idUser, int side);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/EliminatePlayerFromMatch")]
        void EliminatePlayerFromMatch(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/EliminatePlayerFromMatch")]
        System.Threading.Tasks.Task EliminatePlayerFromMatchAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/MakeTeams")]
        void MakeTeams(int roomCode, int idUser, bool wannaTeam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/MakeTeams")]
        System.Threading.Tasks.Task MakeTeamsAsync(int roomCode, int idUser, bool wannaTeam);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyActionsCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/UpdateJoinedPlayerResponse", ReplyAction="http://tempuri.org/ILobbyActions/UpdateJoinedPlayerResponseResponse")]
        void UpdateJoinedPlayerResponse(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 playersInTheLobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/MakeTeamsResponse", ReplyAction="http://tempuri.org/ILobbyActions/MakeTeamsResponseResponse")]
        void MakeTeamsResponse(bool teamUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/UpdateTeamSide", ReplyAction="http://tempuri.org/ILobbyActions/UpdateTeamSideResponse")]
        void UpdateTeamSide(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 playersInTheLobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/DissolvingLobby", ReplyAction="http://tempuri.org/ILobbyActions/DissolvingLobbyResponse")]
        void DissolvingLobby();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyActionsChannel : JeopardyGame.ServidorServiciosJeopardy.ILobbyActions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyActionsClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.ILobbyActions>, JeopardyGame.ServidorServiciosJeopardy.ILobbyActions {
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint CreateNewLobby(int RoomCode, int idUser) {
            return base.Channel.CreateNewLobby(RoomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> CreateNewLobbyAsync(int RoomCode, int idUser) {
            return base.Channel.CreateNewLobbyAsync(RoomCode, idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 GetAllCurrentPlayerInLobby(int roomCode, int idUser) {
            return base.Channel.GetAllCurrentPlayerInLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4> GetAllCurrentPlayerInLobbyAsync(int roomCode, int idUser) {
            return base.Channel.GetAllCurrentPlayerInLobbyAsync(roomCode, idUser);
        }
        
        public void DissolveLobby(int RoomCode, int idUser) {
            base.Channel.DissolveLobby(RoomCode, idUser);
        }
        
        public System.Threading.Tasks.Task DissolveLobbyAsync(int RoomCode, int idUser) {
            return base.Channel.DissolveLobbyAsync(RoomCode, idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint joinLobby(int roomCode, int idUser) {
            return base.Channel.joinLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> joinLobbyAsync(int roomCode, int idUser) {
            return base.Channel.joinLobbyAsync(roomCode, idUser);
        }
        
        public void NotifyPlayerInlobby(int roomCode, int idUser) {
            base.Channel.NotifyPlayerInlobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task NotifyPlayerInlobbyAsync(int roomCode, int idUser) {
            return base.Channel.NotifyPlayerInlobbyAsync(roomCode, idUser);
        }
        
        public void leaveLobby(int roomCode, int idUser) {
            base.Channel.leaveLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task leaveLobbyAsync(int roomCode, int idUser) {
            return base.Channel.leaveLobbyAsync(roomCode, idUser);
        }
        
        public void ChangePlayerSide(int RoomCode, int idUser, int side) {
            base.Channel.ChangePlayerSide(RoomCode, idUser, side);
        }
        
        public System.Threading.Tasks.Task ChangePlayerSideAsync(int RoomCode, int idUser, int side) {
            return base.Channel.ChangePlayerSideAsync(RoomCode, idUser, side);
        }
        
        public void EliminatePlayerFromMatch(int roomCode, int idUser) {
            base.Channel.EliminatePlayerFromMatch(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task EliminatePlayerFromMatchAsync(int roomCode, int idUser) {
            return base.Channel.EliminatePlayerFromMatchAsync(roomCode, idUser);
        }
        
        public void MakeTeams(int roomCode, int idUser, bool wannaTeam) {
            base.Channel.MakeTeams(roomCode, idUser, wannaTeam);
        }
        
        public System.Threading.Tasks.Task MakeTeamsAsync(int roomCode, int idUser, bool wannaTeam) {
            return base.Channel.MakeTeamsAsync(roomCode, idUser, wannaTeam);
        }
    }
}
