{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-7.23572.1 (7b75981c)",
        "semanticVersion": "4.8.0",
        "language": "es-MX"
      },
      "results": [
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/EmailConfirmationDictionary.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 19,
                  "endLine": 12,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/PasswordChangeCodeDictionary.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 50,
                  "endLine": 8,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2386",
          "level": "warning",
          "message": "Use an immutable collection or reduce the accessibility of the public static field 'passwordsCodes'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/PasswordChangeCodeDictionary.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'passwordsCodes' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/PasswordChangeCodeDictionary.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 50,
                  "endLine": 8,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/TeamChats.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'ILobbyActionsOperationImplementation' to match pascal case naming rules, consider using 'LobbyActionsOperationImplementation'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 26,
                  "endLine": 216,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'lockObject' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/UserCreateAccountCodeImplementation.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'IGameActionsOperationsImplementation' to match pascal case naming rules, consider using 'GameActionsOperationsImplementation'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 26,
                  "endLine": 162,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'lockObject' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ValidateUserExistanceImplementation.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endLine": 44,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 20,
                  "endLine": 37,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'createAccountCodeImplementation'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ServicesReferenceAuthor.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 9,
                  "endLine": 308,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ValidateUserExistanceImplementation.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveUsersDictionary.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveUsersDictionary.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 34,
                  "endLine": 58,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ChatsDictionary.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 57,
                  "endLine": 102,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 33,
                  "endLine": 56,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ChatsDictionary.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 80,
                  "endLine": 100,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'listChannels.listOfChannelsCallBack.FirstOrDefault(pl => pl.idUser == idUser)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ChatsDictionary.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'listOfPlayer.FirstOrDefault(pl => pl.IdUser == idUser)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/ActiveGamesDictionary.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/EmailConfirmationDictionary.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/EmailConfirmationDictionary.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/GameLobbiesDictionary.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 47,
                  "endLine": 52,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/GameLobbiesDictionary.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 64,
                  "endLine": 50,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'lobby.listOfPlayerInLobby.FirstOrDefault(pla => pla.idUser == idUser)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/DataDictionaries/GameLobbiesDictionary.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 21,
                  "endLine": 52,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "Please review this hard-coded password.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/EmailSender.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 31,
                  "endLine": 28,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ChatForTeamsImplementation.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ChatForTeamsImplementation.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 19,
                  "endLine": 60,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/UserManagerImplementation.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 19,
                  "endLine": 29,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on a new instance because is a no-op, use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ChatForTeamsImplementation.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 19,
                  "endLine": 188,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 63,
                  "endLine": 56,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 63,
                  "endLine": 62,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 63,
                  "endLine": 68,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 63,
                  "endLine": 74,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 19,
                  "endLine": 116,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 63,
                  "endLine": 111,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 63,
                  "endLine": 117,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 63,
                  "endLine": 123,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 63,
                  "endLine": 129,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 19,
                  "endLine": 69,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'idNewUser' to 'idNewPlayer' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 50,
                  "endLine": 184,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 63,
                  "endLine": 167,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 63,
                  "endLine": 173,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 63,
                  "endLine": 179,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'user' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 63,
                  "endLine": 185,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'idUser' to 'idIUser' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 56,
                  "endLine": 19,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 19,
                  "endLine": 240,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 80,
                  "endLine": 61,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 77,
                  "endLine": 94,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 19,
                  "endLine": 58,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'emailSend'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/EmailSenderManagerImplementation.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 21,
                  "endLine": 186,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/UserCreateAccountCodeImplementation.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 19,
                  "endLine": 28,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 21,
                  "endLine": 172,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 48,
                  "endLine": 176,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 25,
                  "endLine": 182,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 29,
                  "endLine": 191,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 29,
                  "endLine": 196,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 29,
                  "endLine": 201,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 29,
                  "endLine": 206,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Drop 'Where' and move the condition into the 'FirstOrDefault'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 56,
                  "endLine": 181,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 327,
                  "startColumn": 19,
                  "endLine": 327,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 62,
                  "endLine": 186,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 19,
                  "endLine": 174,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/HeartBeatImplementation.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GuestPlayerManagerImplementation.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 19,
                  "endLine": 29,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/UserCreateAccountCodeImplementation.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 35,
                  "endLine": 66,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'activeGame.FirstOrDefault(player => player.IdUser == idUserUnsubscribing)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 51,
                  "endLine": 186,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/CheckUserLivingImplementation.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 19,
                  "endLine": 375,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GuestPlayerManagerImplementation.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 39,
                  "endLine": 101,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/CheckUserLivingImplementation.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 19,
                  "endLine": 66,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/CheckUserLivingImplementation.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 19,
                  "endLine": 114,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/FriendManagerActionsImplementation.cs",
                "region": {
                  "startLine": 423,
                  "startColumn": 19,
                  "endLine": 423,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 32,
                  "endLine": 238,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2551",
          "level": "warning",
          "message": "Lock on a dedicated object instance instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 227,
                  "startColumn": 19,
                  "endLine": 227,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 19,
                  "endLine": 23,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ChannelsAdministrator/ChannelAdministrator.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 98,
                  "endLine": 110,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 32,
                  "endLine": 275,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/UserCreateAccountCodeImplementation.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 19,
                  "endLine": 171,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ChannelsAdministrator/ChannelAdministrator.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 94,
                  "endLine": 139,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'playerConsulted'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 102,
                  "endLine": 281,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 28,
                  "endLine": 299,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2551",
          "level": "warning",
          "message": "Lock on a dedicated object instance instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 19,
                  "endLine": 84,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 17,
                  "endLine": 328,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/ConsultFriendsImplementation.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 13,
                  "endLine": 326,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ChannelsAdministrator/ChannelAdministrator.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 94,
                  "endLine": 187,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 22,
                  "endLine": 294,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 13,
                  "endLine": 296,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 17,
                  "endLine": 299,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 21,
                  "endLine": 302,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 25,
                  "endLine": 311,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 25,
                  "endLine": 316,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 25,
                  "endLine": 321,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 25,
                  "endLine": 326,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LiveChatImplementation.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 19,
                  "endLine": 182,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6617",
          "level": "warning",
          "message": "Collection-specific \"Contains\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GuestPlayerManagerImplementation.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 41,
                  "endLine": 168,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyCodeAuthentication.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 19,
                  "endLine": 28,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 91,
                  "endLine": 32,
                  "endColumn": 93
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 25,
                  "endLine": 34,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 25,
                  "endLine": 40,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 21,
                  "endLine": 46,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 17,
                  "endLine": 63,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LoginVerificationImplementation.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 13,
                  "endLine": 76,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 25,
                  "endLine": 36,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 41,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 25,
                  "endLine": 51,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(friend => friend.IdUser))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 44,
                  "endLine": 26,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 19,
                  "endLine": 106,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 19,
                  "endLine": 63,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 57,
                  "endLine": 509,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(player => player.IdUser))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 36,
                  "endLine": 507,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 19,
                  "endLine": 181,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/NotifyUserAvailabilityImplementation%20.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 19,
                  "endLine": 98,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 75,
                  "endLine": 341,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 33,
                  "endLine": 58,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 79,
                  "endLine": 381,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 20,
                  "endLine": 17,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 21,
                  "endLine": 24,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 25,
                  "endLine": 28,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 29,
                  "endLine": 30,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 33,
                  "endLine": 35,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 33,
                  "endLine": 41,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 29,
                  "endLine": 46,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 25,
                  "endLine": 51,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 17,
                  "endLine": 61,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 19,
                  "endLine": 332,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 96,
                  "endLine": 535,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'idUserLeaving' to 'idUser' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 330,
                  "startColumn": 50,
                  "endLine": 330,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 21,
                  "endLine": 523,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 17,
                  "endLine": 527,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 48,
                  "endLine": 527,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 530,
                  "startColumn": 21,
                  "endLine": 530,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 29,
                  "endLine": 535,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 540,
                  "startColumn": 25,
                  "endLine": 540,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 25,
                  "endLine": 545,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 550,
                  "startColumn": 25,
                  "endLine": 550,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 555,
                  "startColumn": 25,
                  "endLine": 555,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 532,
                  "startColumn": 40,
                  "endLine": 532,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'email' to 'emailBody' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 91,
                  "endLine": 17,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 525,
                  "startColumn": 19,
                  "endLine": 525,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 389,
                  "startColumn": 22,
                  "endLine": 389,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 13,
                  "endLine": 392,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 17,
                  "endLine": 394,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 25,
                  "endLine": 399,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 45,
                  "endLine": 399,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 404,
                  "startColumn": 21,
                  "endLine": 404,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 409,
                  "startColumn": 21,
                  "endLine": 409,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 21,
                  "endLine": 414,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 21,
                  "endLine": 419,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 567,
                  "startColumn": 19,
                  "endLine": 567,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 20,
                  "endLine": 77,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 53,
                  "endLine": 82,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 21,
                  "endLine": 86,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 25,
                  "endLine": 88,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 29,
                  "endLine": 90,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 29,
                  "endLine": 95,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 25,
                  "endLine": 100,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 21,
                  "endLine": 105,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 13,
                  "endLine": 111,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 13,
                  "endLine": 115,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 13,
                  "endLine": 123,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'playersPlaying.FirstOrDefault(pla => pla.IdUser == idUser)' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 532,
                  "startColumn": 25,
                  "endLine": 532,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Drop 'Where' and move the condition into the 'First'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 53,
                  "endLine": 135,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/RecoverPasswordImplementation.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 35,
                  "endLine": 133,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 624,
                  "startColumn": 115,
                  "endLine": 624,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 600,
                  "startColumn": 21,
                  "endLine": 600,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 604,
                  "startColumn": 17,
                  "endLine": 604,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 604,
                  "startColumn": 35,
                  "endLine": 604,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 607,
                  "startColumn": 21,
                  "endLine": 607,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 610,
                  "startColumn": 25,
                  "endLine": 610,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 616,
                  "startColumn": 33,
                  "endLine": 616,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 620,
                  "startColumn": 33,
                  "endLine": 620,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 624,
                  "startColumn": 33,
                  "endLine": 624,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 632,
                  "startColumn": 29,
                  "endLine": 632,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 637,
                  "startColumn": 29,
                  "endLine": 637,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 642,
                  "startColumn": 29,
                  "endLine": 642,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 647,
                  "startColumn": 29,
                  "endLine": 647,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 653,
                  "startColumn": 25,
                  "endLine": 653,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 437,
                  "startColumn": 64,
                  "endLine": 437,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'lockObject', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 430,
                  "startColumn": 19,
                  "endLine": 430,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 77,
                  "endLine": 609,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2445",
          "level": "warning",
          "message": "Do not lock on writable field 'objectLock', use a readonly field instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 602,
                  "startColumn": 19,
                  "endLine": 602,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 706,
                  "startColumn": 63,
                  "endLine": 706,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(item => item.IdUser))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 38,
                  "endLine": 703,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'True'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/GameActionsImplementation.cs",
                "region": {
                  "startLine": 706,
                  "startColumn": 26,
                  "endLine": 706,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 109,
                  "endLine": 163,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 60,
                  "endLine": 164,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 109,
                  "endLine": 165,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 60,
                  "endLine": 166,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/Helpers/QuestionsManagerImplementation.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 111,
                  "endLine": 167,
                  "endColumn": 116
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 647,
                  "startColumn": 22,
                  "endLine": 647,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 650,
                  "startColumn": 13,
                  "endLine": 650,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 652,
                  "startColumn": 17,
                  "endLine": 652,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 25,
                  "endLine": 657,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 45,
                  "endLine": 657,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 662,
                  "startColumn": 21,
                  "endLine": 662,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 667,
                  "startColumn": 21,
                  "endLine": 667,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 672,
                  "startColumn": 21,
                  "endLine": 672,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 677,
                  "startColumn": 21,
                  "endLine": 677,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 617,
                  "startColumn": 64,
                  "endLine": 617,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 695,
                  "startColumn": 85,
                  "endLine": 695,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 21,
                  "endLine": 812,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 13,
                  "endLine": 816,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 31,
                  "endLine": 816,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 818,
                  "startColumn": 17,
                  "endLine": 818,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 824,
                  "startColumn": 21,
                  "endLine": 824,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 829,
                  "startColumn": 21,
                  "endLine": 829,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 834,
                  "startColumn": 21,
                  "endLine": 834,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 839,
                  "startColumn": 21,
                  "endLine": 839,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/wachi/OneDrive/Documentos/GitHub/JeopardyTecnologias/JeopardyGameServer/JeopardyGame.Service/ServiceImplementation/LobbyActionsImplementation.cs",
                "region": {
                  "startLine": 807,
                  "startColumn": 13,
                  "endLine": 809,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "An empty code block is confusing. It will require some effort from maintainers to determine if it is intentional or indicates the implementation is incomplete.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and have three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "A boolean literal can be represented in two different ways: true or false. They can be combined with logical operators (!, &&, ||, ==, !=) to produce logical expressions that represent truth values. However, comparing a boolean literal to a variable or expression that evaluates to a boolean value is unnecessary and can make the code harder to read and understand. The more complex a boolean expression is, the harder it will be for developers to understand its meaning and expected behavior, and it will favour the introduction of new bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null or default instead of an actual collection forces the method callers to explicitly test for null, making the code more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "A typical code smell known as unused function parameters refers to parameters declared in a function but not used anywhere within the function’s body. While this might seem harmless at first glance, it can lead to confusion and potential errors in your code. Disregarding the values passed to such parameters, the function’s behavior will be the same, but the programmer’s intention won’t be clearly expressed anymore. Therefore, removing function parameters that are not being utilized is considered best practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "Dead stores refer to assignments made to local variables that are subsequently never used or immediately overwritten. Such assignments are unnecessary and don’t contribute to the functionality or clarity of the code. They may even negatively impact performance. Removing them enhances code cleanliness and readability. Even if the unnecessary operations do not do any harm in terms of the program’s correctness, they are - at best - a waste of computing resources.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "Unlike instance fields, which can only be accessed by code having a hold on the instance, static fields can be accessed by any code having visibility of the field and its type.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2245": {
          "id": "S2245",
          "shortDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive",
          "fullDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive. For example, it has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2245",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2259": {
          "id": "S2259",
          "shortDescription": "Null pointers should not be dereferenced",
          "fullDescription": "Accessing a null value will always throw a NullReferenceException most likely causing an abrupt program termination.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2259",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2386": {
          "id": "S2386",
          "shortDescription": "Mutable fields should not be \"public static\"",
          "fullDescription": "public static mutable fields of classes which are accessed directly should be protected to the degree possible. This can be done by reducing the accessibility of the field or by changing the return type to an immutable type.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2386",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2445": {
          "id": "S2445",
          "shortDescription": "Blocks should be synchronized on read-only fields",
          "fullDescription": "Locking on a class field synchronizes not on the field itself, but on the object assigned to it. Thus, there are some good practices to follow to avoid problems related to thread synchronization.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2445",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2551": {
          "id": "S2551",
          "shortDescription": "Shared resources should not be used for locking",
          "fullDescription": "A shared resource refers to a resource or data that can be accessed or modified by multiple threads or concurrent parts of a program. It could be any piece of data, object, file, database connection, or system resource that needs to be accessed or manipulated by multiple parts of a program concurrently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2551",
          "properties": {
            "category": "Critical Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "Gratuitous boolean expressions are conditions that do not change the evaluation of a program. This issue can indicate logical errors and affect the correctness of an application, as well as its maintainability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "LINQ expressions should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified. This not only improves readabilty but can also lead to improved performance.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6602": {
          "id": "S6602",
          "shortDescription": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension",
          "fullDescription": "Both the List.Find method and IEnumerable.FirstOrDefault method can be used to find the first element that satisfies a given condition in a collection. However, List.Find can be faster than IEnumerable.FirstOrDefault for List objects. For small collections, the performance difference may be minor, but for large collections, it can make a noticeable difference. The same applies for ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6602",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6605": {
          "id": "S6605",
          "shortDescription": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension",
          "fullDescription": "Both the List.Exists method and IEnumerable.Any method can be used to find the first element that satisfies a predicate in a collection. However, List.Exists can be faster than IEnumerable.Any for List objects, as well as requires significantly less memory. For small collections, the performance difference may be negligible, but for large collections, it can be noticeable. The same applies to ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6605",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6608": {
          "id": "S6608",
          "shortDescription": "Prefer indexing instead of \"Enumerable\" methods on types implementing \"IList\"",
          "fullDescription": "Indexes in C# provide direct access to an element at a specific position within an array or collection. When compared to Enumerable methods, indexing can be more efficient for certain scenarios, such as iterating over a large collection, due to avoiding the overhead of checking the underlying collection type before accessing it.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6608",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6617": {
          "id": "S6617",
          "shortDescription": "\"Contains\" should be used instead of \"Any\" for simple equality checks",
          "fullDescription": "When testing if a collection contains a specific item by simple equality, both ICollection.Contains(T item) and IEnumerable.Any(x ⇒ x == item) can be used. However, Any searches the data structure in a linear manner using a foreach loop, whereas Contains is considerably faster in some collection types, because of the underlying implementation. More specifically:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6617",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "Parameters are part of the method signature and its identity.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}