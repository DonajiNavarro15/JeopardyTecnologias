//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeopardyGame.ServidorServiciosJeopardy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class UserPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfint", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((this.ObjectSavedField.Equals(value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserValidate", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class UserValidate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfMessageChatxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfMessageChatxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.MessageChat ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.MessageChat ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((this.ObjectSavedField.Equals(value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageChat", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial struct MessageChat : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageToSendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageToSend {
            get {
                return this.MessageToSendField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageToSendField, value) != true)) {
                    this.MessageToSendField = value;
                    this.RaisePropertyChanged("MessageToSend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfFriendBasicInformationxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.FriendBasicInformation[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.FriendBasicInformation[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendBasicInformation", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial struct FriendBasicInformation : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdStatusAvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdStatusAvailability {
            get {
                return this.IdStatusAvailabilityField;
            }
            set {
                if ((this.IdStatusAvailabilityField.Equals(value) != true)) {
                    this.IdStatusAvailabilityField = value;
                    this.RaisePropertyChanged("IdStatusAvailability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfUserPOJOxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfUserPOJOxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.UserPOJO ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.UserPOJO ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfPlayerPOJOxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfPlayerPOJOxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.PlayerPOJO ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.PlayerPOJO ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeneralPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdActualAvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoReportsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GeneralPoints {
            get {
                return this.GeneralPointsField;
            }
            set {
                if ((this.GeneralPointsField.Equals(value) != true)) {
                    this.GeneralPointsField = value;
                    this.RaisePropertyChanged("GeneralPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdActualAvatar {
            get {
                return this.IdActualAvatarField;
            }
            set {
                if ((this.IdActualAvatarField.Equals(value) != true)) {
                    this.IdActualAvatarField = value;
                    this.RaisePropertyChanged("IdActualAvatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdState {
            get {
                return this.IdStateField;
            }
            set {
                if ((this.IdStateField.Equals(value) != true)) {
                    this.IdStateField = value;
                    this.RaisePropertyChanged("IdState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoReports {
            get {
                return this.NoReportsField;
            }
            set {
                if ((this.NoReportsField.Equals(value) != true)) {
                    this.NoReportsField = value;
                    this.RaisePropertyChanged("NoReports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfPlayerInfoxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfPlayerInfoxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.PlayerInfo[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.PlayerInfo[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInfo", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfPlayerInLobbyxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.PlayerInLobby[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.PlayerInLobby[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInLobby", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial struct PlayerInLobby : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPlayerInLobbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SideOfTeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPlayerInLobby {
            get {
                return this.NumberOfPlayerInLobbyField;
            }
            set {
                if ((this.NumberOfPlayerInLobbyField.Equals(value) != true)) {
                    this.NumberOfPlayerInLobbyField = value;
                    this.RaisePropertyChanged("NumberOfPlayerInLobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SideOfTeam {
            get {
                return this.SideOfTeamField;
            }
            set {
                if ((this.SideOfTeamField.Equals(value) != true)) {
                    this.SideOfTeamField = value;
                    this.RaisePropertyChanged("SideOfTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionCardInformation", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class QuestionCardInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.CategoryPOJO CategoryOfQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdQuestionCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfRoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO RightAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.QuestionPOJO SpecificQuestionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionThreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionTwoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.CategoryPOJO CategoryOfQuestion {
            get {
                return this.CategoryOfQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryOfQuestionField, value) != true)) {
                    this.CategoryOfQuestionField = value;
                    this.RaisePropertyChanged("CategoryOfQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdQuestionCard {
            get {
                return this.IdQuestionCardField;
            }
            set {
                if ((this.IdQuestionCardField.Equals(value) != true)) {
                    this.IdQuestionCardField = value;
                    this.RaisePropertyChanged("IdQuestionCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfRound {
            get {
                return this.NumberOfRoundField;
            }
            set {
                if ((this.NumberOfRoundField.Equals(value) != true)) {
                    this.NumberOfRoundField = value;
                    this.RaisePropertyChanged("NumberOfRound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO RightAnswer {
            get {
                return this.RightAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.RightAnswerField, value) != true)) {
                    this.RightAnswerField = value;
                    this.RaisePropertyChanged("RightAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.QuestionPOJO SpecificQuestionDetails {
            get {
                return this.SpecificQuestionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificQuestionDetailsField, value) != true)) {
                    this.SpecificQuestionDetailsField = value;
                    this.RaisePropertyChanged("SpecificQuestionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionOne {
            get {
                return this.WrongOptionOneField;
            }
            set {
                if ((object.ReferenceEquals(this.WrongOptionOneField, value) != true)) {
                    this.WrongOptionOneField = value;
                    this.RaisePropertyChanged("WrongOptionOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionThree {
            get {
                return this.WrongOptionThreeField;
            }
            set {
                if ((object.ReferenceEquals(this.WrongOptionThreeField, value) != true)) {
                    this.WrongOptionThreeField = value;
                    this.RaisePropertyChanged("WrongOptionThree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.AnswerPOJO WrongOptionTwo {
            get {
                return this.WrongOptionTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.WrongOptionTwoField, value) != true)) {
                    this.WrongOptionTwoField = value;
                    this.RaisePropertyChanged("WrongOptionTwo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class CategoryPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishCategoryDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCategoryDescription {
            get {
                return this.EnglishCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishCategoryDescriptionField, value) != true)) {
                    this.EnglishCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EnglishCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategory {
            get {
                return this.IdCategoryField;
            }
            set {
                if ((this.IdCategoryField.Equals(value) != true)) {
                    this.IdCategoryField = value;
                    this.RaisePropertyChanged("IdCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishCategoryDescription {
            get {
                return this.SpanishCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishCategoryDescriptionField, value) != true)) {
                    this.SpanishCategoryDescriptionField = value;
                    this.RaisePropertyChanged("SpanishCategoryDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class AnswerPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishAnswerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishAnswerDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishAnswerDescription {
            get {
                return this.EnglishAnswerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishAnswerDescriptionField, value) != true)) {
                    this.EnglishAnswerDescriptionField = value;
                    this.RaisePropertyChanged("EnglishAnswerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAnswer {
            get {
                return this.IdAnswerField;
            }
            set {
                if ((this.IdAnswerField.Equals(value) != true)) {
                    this.IdAnswerField = value;
                    this.RaisePropertyChanged("IdAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategory {
            get {
                return this.IdCategoryField;
            }
            set {
                if ((this.IdCategoryField.Equals(value) != true)) {
                    this.IdCategoryField = value;
                    this.RaisePropertyChanged("IdCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishAnswerDescription {
            get {
                return this.SpanishAnswerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishAnswerDescriptionField, value) != true)) {
                    this.SpanishAnswerDescriptionField = value;
                    this.RaisePropertyChanged("SpanishAnswerDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionPOJO", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class QuestionPOJO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishQuestionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAnswerOfQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoryBelongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishQuestionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueWorthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishQuestionDescription {
            get {
                return this.EnglishQuestionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishQuestionDescriptionField, value) != true)) {
                    this.EnglishQuestionDescriptionField = value;
                    this.RaisePropertyChanged("EnglishQuestionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAnswerOfQuestion {
            get {
                return this.IdAnswerOfQuestionField;
            }
            set {
                if ((this.IdAnswerOfQuestionField.Equals(value) != true)) {
                    this.IdAnswerOfQuestionField = value;
                    this.RaisePropertyChanged("IdAnswerOfQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategoryBelong {
            get {
                return this.IdCategoryBelongField;
            }
            set {
                if ((this.IdCategoryBelongField.Equals(value) != true)) {
                    this.IdCategoryBelongField = value;
                    this.RaisePropertyChanged("IdCategoryBelong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdQuestion {
            get {
                return this.IdQuestionField;
            }
            set {
                if ((this.IdQuestionField.Equals(value) != true)) {
                    this.IdQuestionField = value;
                    this.RaisePropertyChanged("IdQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishQuestionDescription {
            get {
                return this.SpanishQuestionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishQuestionDescriptionField, value) != true)) {
                    this.SpanishQuestionDescriptionField = value;
                    this.RaisePropertyChanged("SpanishQuestionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueWorth {
            get {
                return this.ValueWorthField;
            }
            set {
                if ((this.ValueWorthField.Equals(value) != true)) {
                    this.ValueWorthField = value;
                    this.RaisePropertyChanged("ValueWorth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfArrayOfMessageChatxY0a3WX4", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfArrayOfMessageChatxY0a3WX4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JeopardyGame.ServidorServiciosJeopardy.MessageChat[] ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JeopardyGame.ServidorServiciosJeopardy.MessageChat[] ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSavedField, value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassOfboolean", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class GenericClassOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ObjectSavedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeEvent {
            get {
                return this.CodeEventField;
            }
            set {
                if ((this.CodeEventField.Equals(value) != true)) {
                    this.CodeEventField = value;
                    this.RaisePropertyChanged("CodeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ObjectSaved {
            get {
                return this.ObjectSavedField;
            }
            set {
                if ((this.ObjectSavedField.Equals(value) != true)) {
                    this.ObjectSavedField = value;
                    this.RaisePropertyChanged("ObjectSaved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentQuestionToShowContract", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class CurrentQuestionToShowContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdFirstAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdFourthAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSecondAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdThirdAnswerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFirstAnswer {
            get {
                return this.IdFirstAnswerField;
            }
            set {
                if ((this.IdFirstAnswerField.Equals(value) != true)) {
                    this.IdFirstAnswerField = value;
                    this.RaisePropertyChanged("IdFirstAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFourthAnswer {
            get {
                return this.IdFourthAnswerField;
            }
            set {
                if ((this.IdFourthAnswerField.Equals(value) != true)) {
                    this.IdFourthAnswerField = value;
                    this.RaisePropertyChanged("IdFourthAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdQuestion {
            get {
                return this.IdQuestionField;
            }
            set {
                if ((this.IdQuestionField.Equals(value) != true)) {
                    this.IdQuestionField = value;
                    this.RaisePropertyChanged("IdQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSecondAnswer {
            get {
                return this.IdSecondAnswerField;
            }
            set {
                if ((this.IdSecondAnswerField.Equals(value) != true)) {
                    this.IdSecondAnswerField = value;
                    this.RaisePropertyChanged("IdSecondAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdThirdAnswer {
            get {
                return this.IdThirdAnswerField;
            }
            set {
                if ((this.IdThirdAnswerField.Equals(value) != true)) {
                    this.IdThirdAnswerField = value;
                    this.RaisePropertyChanged("IdThirdAnswer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInGameDataContract", Namespace="http://schemas.datacontract.org/2004/07/JeopardyGame.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerInGameDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPointsOfRoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FinalPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SideTeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TurnOfPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPointsOfRound {
            get {
                return this.CurrentPointsOfRoundField;
            }
            set {
                if ((this.CurrentPointsOfRoundField.Equals(value) != true)) {
                    this.CurrentPointsOfRoundField = value;
                    this.RaisePropertyChanged("CurrentPointsOfRound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FinalPosition {
            get {
                return this.FinalPositionField;
            }
            set {
                if ((this.FinalPositionField.Equals(value) != true)) {
                    this.FinalPositionField = value;
                    this.RaisePropertyChanged("FinalPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAvatar {
            get {
                return this.IdAvatarField;
            }
            set {
                if ((this.IdAvatarField.Equals(value) != true)) {
                    this.IdAvatarField = value;
                    this.RaisePropertyChanged("IdAvatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SideTeam {
            get {
                return this.SideTeamField;
            }
            set {
                if ((this.SideTeamField.Equals(value) != true)) {
                    this.SideTeamField = value;
                    this.RaisePropertyChanged("SideTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TurnOfPlayer {
            get {
                return this.TurnOfPlayerField;
            }
            set {
                if ((this.TurnOfPlayerField.Equals(value) != true)) {
                    this.TurnOfPlayerField = value;
                    this.RaisePropertyChanged("TurnOfPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SaveUser", ReplyAction="http://tempuri.org/IUserManager/SaveUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SaveUser(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SaveUser", ReplyAction="http://tempuri.org/IUserManager/SaveUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SaveUserAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateUserInformation", ReplyAction="http://tempuri.org/IUserManager/UpdateUserInformationResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdateUserInformation(string editedName, string originalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateUserInformation", ReplyAction="http://tempuri.org/IUserManager/UpdateUserInformationResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdateUserInformationAsync(string editedName, string originalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdatePlayerPhoto", ReplyAction="http://tempuri.org/IUserManager/UpdatePlayerPhotoResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdatePlayerPhoto(int idPlayer, int imageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdatePlayerPhoto", ReplyAction="http://tempuri.org/IUserManager/UpdatePlayerPhotoResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdatePlayerPhotoAsync(int idPlayer, int imageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateEmailUser", ReplyAction="http://tempuri.org/IUserManager/UpdateEmailUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdateEmailUser(int idUser, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateEmailUser", ReplyAction="http://tempuri.org/IUserManager/UpdateEmailUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdateEmailUserAsync(int idUser, string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : JeopardyGame.ServidorServiciosJeopardy.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IUserManager>, JeopardyGame.ServidorServiciosJeopardy.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SaveUser(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew) {
            return base.Channel.SaveUser(userPojoNew);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SaveUserAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO userPojoNew) {
            return base.Channel.SaveUserAsync(userPojoNew);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdateUserInformation(string editedName, string originalName) {
            return base.Channel.UpdateUserInformation(editedName, originalName);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdateUserInformationAsync(string editedName, string originalName) {
            return base.Channel.UpdateUserInformationAsync(editedName, originalName);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdatePlayerPhoto(int idPlayer, int imageId) {
            return base.Channel.UpdatePlayerPhoto(idPlayer, imageId);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdatePlayerPhotoAsync(int idPlayer, int imageId) {
            return base.Channel.UpdatePlayerPhotoAsync(idPlayer, imageId);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UpdateEmailUser(int idUser, string email) {
            return base.Channel.UpdateEmailUser(idUser, email);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UpdateEmailUserAsync(int idUser, string email) {
            return base.Channel.UpdateEmailUserAsync(idUser, email);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.ILogInVerification")]
    public interface ILogInVerification {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogInVerification/ValidateCredentials", ReplyAction="http://tempuri.org/ILogInVerification/ValidateCredentialsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint ValidateCredentials(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogInVerification/ValidateCredentials", ReplyAction="http://tempuri.org/ILogInVerification/ValidateCredentialsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> ValidateCredentialsAsync(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogInVerification/ValidateThereIsOnlyOneAActiveAccount", ReplyAction="http://tempuri.org/ILogInVerification/ValidateThereIsOnlyOneAActiveAccountRespons" +
            "e")]
        int ValidateThereIsOnlyOneAActiveAccount(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogInVerification/ValidateThereIsOnlyOneAActiveAccount", ReplyAction="http://tempuri.org/ILogInVerification/ValidateThereIsOnlyOneAActiveAccountRespons" +
            "e")]
        System.Threading.Tasks.Task<int> ValidateThereIsOnlyOneAActiveAccountAsync(int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogInVerificationChannel : JeopardyGame.ServidorServiciosJeopardy.ILogInVerification, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogInVerificationClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.ILogInVerification>, JeopardyGame.ServidorServiciosJeopardy.ILogInVerification {
        
        public LogInVerificationClient() {
        }
        
        public LogInVerificationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogInVerificationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogInVerificationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogInVerificationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint ValidateCredentials(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate) {
            return base.Channel.ValidateCredentials(newUserValidate);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> ValidateCredentialsAsync(JeopardyGame.ServidorServiciosJeopardy.UserValidate newUserValidate) {
            return base.Channel.ValidateCredentialsAsync(newUserValidate);
        }
        
        public int ValidateThereIsOnlyOneAActiveAccount(int idUser) {
            return base.Channel.ValidateThereIsOnlyOneAActiveAccount(idUser);
        }
        
        public System.Threading.Tasks.Task<int> ValidateThereIsOnlyOneAActiveAccountAsync(int idUser) {
            return base.Channel.ValidateThereIsOnlyOneAActiveAccountAsync(idUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IEmailSenderManager")]
    public interface IEmailSenderManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSenderManager/SentEmailConfirmationToCreateAccount", ReplyAction="http://tempuri.org/IEmailSenderManager/SentEmailConfirmationToCreateAccountRespon" +
            "se")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailConfirmationToCreateAccount(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSenderManager/SentEmailConfirmationToCreateAccount", ReplyAction="http://tempuri.org/IEmailSenderManager/SentEmailConfirmationToCreateAccountRespon" +
            "se")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailConfirmationToCreateAccountAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSenderManager/SentEmailInvitingToGame", ReplyAction="http://tempuri.org/IEmailSenderManager/SentEmailInvitingToGameResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailInvitingToGame(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSenderManager/SentEmailInvitingToGame", ReplyAction="http://tempuri.org/IEmailSenderManager/SentEmailInvitingToGameResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailInvitingToGameAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailSenderManagerChannel : JeopardyGame.ServidorServiciosJeopardy.IEmailSenderManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailSenderManagerClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IEmailSenderManager>, JeopardyGame.ServidorServiciosJeopardy.IEmailSenderManager {
        
        public EmailSenderManagerClient() {
        }
        
        public EmailSenderManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailSenderManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSenderManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSenderManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailConfirmationToCreateAccount(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage) {
            return base.Channel.SentEmailConfirmationToCreateAccount(user, subject, bodyMessage);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailConfirmationToCreateAccountAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage) {
            return base.Channel.SentEmailConfirmationToCreateAccountAsync(user, subject, bodyMessage);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint SentEmailInvitingToGame(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage) {
            return base.Channel.SentEmailInvitingToGame(user, subject, bodyMessage);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> SentEmailInvitingToGameAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user, string subject, string bodyMessage) {
            return base.Channel.SentEmailInvitingToGameAsync(user, subject, bodyMessage);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IUserCreateAccountCode", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.IUserCreateAccountCodeCallback))]
    public interface IUserCreateAccountCode {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/AddUserToConfirmationDictionary", ReplyAction="http://tempuri.org/IUserCreateAccountCode/AddUserToConfirmationDictionaryResponse" +
            "")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint AddUserToConfirmationDictionary(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/AddUserToConfirmationDictionary", ReplyAction="http://tempuri.org/IUserCreateAccountCode/AddUserToConfirmationDictionaryResponse" +
            "")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> AddUserToConfirmationDictionaryAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/CheckCodeEntered", ReplyAction="http://tempuri.org/IUserCreateAccountCode/CheckCodeEnteredResponse")]
        int CheckCodeEntered(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser, string codeEntered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/CheckCodeEntered", ReplyAction="http://tempuri.org/IUserCreateAccountCode/CheckCodeEnteredResponse")]
        System.Threading.Tasks.Task<int> CheckCodeEnteredAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser, string codeEntered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/ResendCode", ReplyAction="http://tempuri.org/IUserCreateAccountCode/ResendCodeResponse")]
        int ResendCode(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/ResendCode", ReplyAction="http://tempuri.org/IUserCreateAccountCode/ResendCodeResponse")]
        System.Threading.Tasks.Task<int> ResendCodeAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/TakeUserOutOfDictionary", ReplyAction="http://tempuri.org/IUserCreateAccountCode/TakeUserOutOfDictionaryResponse")]
        void TakeUserOutOfDictionary(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/TakeUserOutOfDictionary", ReplyAction="http://tempuri.org/IUserCreateAccountCode/TakeUserOutOfDictionaryResponse")]
        System.Threading.Tasks.Task TakeUserOutOfDictionaryAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCreateAccountCodeCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCreateAccountCode/VerifyUserDictionaryAreActive", ReplyAction="http://tempuri.org/IUserCreateAccountCode/VerifyUserDictionaryAreActiveResponse")]
        void VerifyUserDictionaryAreActive();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCreateAccountCodeChannel : JeopardyGame.ServidorServiciosJeopardy.IUserCreateAccountCode, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserCreateAccountCodeClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.IUserCreateAccountCode>, JeopardyGame.ServidorServiciosJeopardy.IUserCreateAccountCode {
        
        public UserCreateAccountCodeClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserCreateAccountCodeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserCreateAccountCodeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserCreateAccountCodeClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserCreateAccountCodeClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint AddUserToConfirmationDictionary(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser) {
            return base.Channel.AddUserToConfirmationDictionary(newUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> AddUserToConfirmationDictionaryAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser) {
            return base.Channel.AddUserToConfirmationDictionaryAsync(newUser);
        }
        
        public int CheckCodeEntered(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser, string codeEntered) {
            return base.Channel.CheckCodeEntered(newUser, codeEntered);
        }
        
        public System.Threading.Tasks.Task<int> CheckCodeEnteredAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser, string codeEntered) {
            return base.Channel.CheckCodeEnteredAsync(newUser, codeEntered);
        }
        
        public int ResendCode(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.ResendCode(user);
        }
        
        public System.Threading.Tasks.Task<int> ResendCodeAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.ResendCodeAsync(user);
        }
        
        public void TakeUserOutOfDictionary(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            base.Channel.TakeUserOutOfDictionary(user);
        }
        
        public System.Threading.Tasks.Task TakeUserOutOfDictionaryAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.TakeUserOutOfDictionaryAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IChatForTeams", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.IChatForTeamsCallback))]
    public interface IChatForTeams {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/SendMessageTeam")]
        void SendMessageTeam(int idUser, int idTeamMate, string userName, string messageToSend);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/SendMessageTeam")]
        System.Threading.Tasks.Task SendMessageTeamAsync(int idUser, int idTeamMate, string userName, string messageToSend);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/UnregisterFromTeamChat")]
        void UnregisterFromTeamChat(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/UnregisterFromTeamChat")]
        System.Threading.Tasks.Task UnregisterFromTeamChatAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/RegisterForTeamChat")]
        void RegisterForTeamChat(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatForTeams/RegisterForTeamChat")]
        System.Threading.Tasks.Task RegisterForTeamChatAsync(int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatForTeamsCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatForTeams/ReceiveMessageTeamChat", ReplyAction="http://tempuri.org/IChatForTeams/ReceiveMessageTeamChatResponse")]
        void ReceiveMessageTeamChat(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfMessageChatxY0a3WX4 message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatForTeamsChannel : JeopardyGame.ServidorServiciosJeopardy.IChatForTeams, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatForTeamsClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.IChatForTeams>, JeopardyGame.ServidorServiciosJeopardy.IChatForTeams {
        
        public ChatForTeamsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatForTeamsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatForTeamsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatForTeamsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatForTeamsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessageTeam(int idUser, int idTeamMate, string userName, string messageToSend) {
            base.Channel.SendMessageTeam(idUser, idTeamMate, userName, messageToSend);
        }
        
        public System.Threading.Tasks.Task SendMessageTeamAsync(int idUser, int idTeamMate, string userName, string messageToSend) {
            return base.Channel.SendMessageTeamAsync(idUser, idTeamMate, userName, messageToSend);
        }
        
        public void UnregisterFromTeamChat(int idUser) {
            base.Channel.UnregisterFromTeamChat(idUser);
        }
        
        public System.Threading.Tasks.Task UnregisterFromTeamChatAsync(int idUser) {
            return base.Channel.UnregisterFromTeamChatAsync(idUser);
        }
        
        public void RegisterForTeamChat(int idUser) {
            base.Channel.RegisterForTeamChat(idUser);
        }
        
        public System.Threading.Tasks.Task RegisterForTeamChatAsync(int idUser) {
            return base.Channel.RegisterForTeamChatAsync(idUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IConsultFriends")]
    public interface IConsultFriends {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUserFriends", ReplyAction="http://tempuri.org/IConsultFriends/GetUserFriendsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUserFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUserFriends", ReplyAction="http://tempuri.org/IConsultFriends/GetUserFriendsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUserFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUserFriendRequests", ReplyAction="http://tempuri.org/IConsultFriends/GetUserFriendRequestsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUserFriendRequests(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUserFriendRequests", ReplyAction="http://tempuri.org/IConsultFriends/GetUserFriendRequestsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUserFriendRequestsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUsersNotFriends", ReplyAction="http://tempuri.org/IConsultFriends/GetUsersNotFriendsResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUsersNotFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultFriends/GetUsersNotFriends", ReplyAction="http://tempuri.org/IConsultFriends/GetUsersNotFriendsResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUsersNotFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsultFriendsChannel : JeopardyGame.ServidorServiciosJeopardy.IConsultFriends, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultFriendsClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IConsultFriends>, JeopardyGame.ServidorServiciosJeopardy.IConsultFriends {
        
        public ConsultFriendsClient() {
        }
        
        public ConsultFriendsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultFriendsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultFriendsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultFriendsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUserFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriends(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUserFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendsAsync(user);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUserFriendRequests(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendRequests(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUserFriendRequestsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUserFriendRequestsAsync(user);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4 GetUsersNotFriends(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUsersNotFriends(user);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfFriendBasicInformationxY0a3WX4> GetUsersNotFriendsAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO user) {
            return base.Channel.GetUsersNotFriendsAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IConsultUserInformation")]
    public interface IConsultUserInformation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserById", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByIdResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserById(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserById", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByIdResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserByIdPlayer", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByIdPlayerResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByIdPlayer(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserByIdPlayer", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByIdPlayerResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdPlayerAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultPlayerById", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerById(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultPlayerById", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdUser", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerByIdUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdUser", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultPlayerByIdUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserByUserName", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByUserNameResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/ConsultUserByUserName", ReplyAction="http://tempuri.org/IConsultUserInformation/ConsultUserByUserNameResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/GetPlayersInformation", ReplyAction="http://tempuri.org/IConsultUserInformation/GetPlayersInformationResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInfoxY0a3WX4 GetPlayersInformation(int idUserConsulting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultUserInformation/GetPlayersInformation", ReplyAction="http://tempuri.org/IConsultUserInformation/GetPlayersInformationResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInfoxY0a3WX4> GetPlayersInformationAsync(int idUserConsulting);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsultUserInformationChannel : JeopardyGame.ServidorServiciosJeopardy.IConsultUserInformation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultUserInformationClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IConsultUserInformation>, JeopardyGame.ServidorServiciosJeopardy.IConsultUserInformation {
        
        public ConsultUserInformationClient() {
        }
        
        public ConsultUserInformationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultUserInformationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultUserInformationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultUserInformationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserById(int idUser) {
            return base.Channel.ConsultUserById(idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdAsync(int idUser) {
            return base.Channel.ConsultUserByIdAsync(idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByIdPlayer(int idPlayer) {
            return base.Channel.ConsultUserByIdPlayer(idPlayer);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByIdPlayerAsync(int idPlayer) {
            return base.Channel.ConsultUserByIdPlayerAsync(idPlayer);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerById(int idPlayer) {
            return base.Channel.ConsultPlayerById(idPlayer);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdAsync(int idPlayer) {
            return base.Channel.ConsultPlayerByIdAsync(idPlayer);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4 ConsultPlayerByIdUser(int idUser) {
            return base.Channel.ConsultPlayerByIdUser(idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfPlayerPOJOxY0a3WX4> ConsultPlayerByIdUserAsync(int idUser) {
            return base.Channel.ConsultPlayerByIdUserAsync(idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 ConsultUserByUserName(string userName) {
            return base.Channel.ConsultUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> ConsultUserByUserNameAsync(string userName) {
            return base.Channel.ConsultUserByUserNameAsync(userName);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInfoxY0a3WX4 GetPlayersInformation(int idUserConsulting) {
            return base.Channel.GetPlayersInformation(idUserConsulting);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInfoxY0a3WX4> GetPlayersInformationAsync(int idUserConsulting) {
            return base.Channel.GetPlayersInformationAsync(idUserConsulting);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.INotifyUserAvailability", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailabilityCallback))]
    public interface INotifyUserAvailability {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsAvailable")]
        void PlayerIsAvailable(int idNewActiveUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserAvailability/PlayerIsAvailable")]
        System.Threading.Tasks.Task PlayerIsAvailableAsync(int idNewActiveUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserAvailabilityCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserAvailability/ResponseOfPlayerAvailability", ReplyAction="http://tempuri.org/INotifyUserAvailability/ResponseOfPlayerAvailabilityResponse")]
        void ResponseOfPlayerAvailability(int status, int idFriend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotifyUserAvailability/VerifyPlayerAvailability", ReplyAction="http://tempuri.org/INotifyUserAvailability/VerifyPlayerAvailabilityResponse")]
        void VerifyPlayerAvailability();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserAvailabilityChannel : JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotifyUserAvailabilityClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability>, JeopardyGame.ServidorServiciosJeopardy.INotifyUserAvailability {
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserAvailabilityClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void PlayerIsAvailable(int idNewActiveUser) {
            base.Channel.PlayerIsAvailable(idNewActiveUser);
        }
        
        public System.Threading.Tasks.Task PlayerIsAvailableAsync(int idNewActiveUser) {
            return base.Channel.PlayerIsAvailableAsync(idNewActiveUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.INotifyUserIsNotAvailable")]
    public interface INotifyUserIsNotAvailable {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserIsNotAvailable/PlayerIsPlaying")]
        void PlayerIsPlaying(int idUserPlaying);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserIsNotAvailable/PlayerIsPlaying")]
        System.Threading.Tasks.Task PlayerIsPlayingAsync(int idUserPlaying);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserIsNotAvailable/PlayerIsNotAvailable")]
        void PlayerIsNotAvailable(int idUserDisconnecting);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INotifyUserIsNotAvailable/PlayerIsNotAvailable")]
        System.Threading.Tasks.Task PlayerIsNotAvailableAsync(int idUserDisconnecting);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotifyUserIsNotAvailableChannel : JeopardyGame.ServidorServiciosJeopardy.INotifyUserIsNotAvailable, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotifyUserIsNotAvailableClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.INotifyUserIsNotAvailable>, JeopardyGame.ServidorServiciosJeopardy.INotifyUserIsNotAvailable {
        
        public NotifyUserIsNotAvailableClient() {
        }
        
        public NotifyUserIsNotAvailableClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotifyUserIsNotAvailableClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserIsNotAvailableClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotifyUserIsNotAvailableClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PlayerIsPlaying(int idUserPlaying) {
            base.Channel.PlayerIsPlaying(idUserPlaying);
        }
        
        public System.Threading.Tasks.Task PlayerIsPlayingAsync(int idUserPlaying) {
            return base.Channel.PlayerIsPlayingAsync(idUserPlaying);
        }
        
        public void PlayerIsNotAvailable(int idUserDisconnecting) {
            base.Channel.PlayerIsNotAvailable(idUserDisconnecting);
        }
        
        public System.Threading.Tasks.Task PlayerIsNotAvailableAsync(int idUserDisconnecting) {
            return base.Channel.PlayerIsNotAvailableAsync(idUserDisconnecting);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IFriendManagerActions", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.IFriendManagerActionsCallback))]
    public interface IFriendManagerActions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/RegisterFriendManagerUser", ReplyAction="http://tempuri.org/IFriendManagerActions/RegisterFriendManagerUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint RegisterFriendManagerUser(int idUserFriendManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/RegisterFriendManagerUser", ReplyAction="http://tempuri.org/IFriendManagerActions/RegisterFriendManagerUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> RegisterFriendManagerUserAsync(int idUserFriendManager);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/UnregisterFriendManagerUser")]
        void UnregisterFriendManagerUser(int idUserFriendManager);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/UnregisterFriendManagerUser")]
        System.Threading.Tasks.Task UnregisterFriendManagerUserAsync(int idUserFriendManager);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/ReportPlayer")]
        void ReportPlayer(int idUser, string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/ReportPlayer")]
        System.Threading.Tasks.Task ReportPlayerAsync(int idUser, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/BanUser", ReplyAction="http://tempuri.org/IFriendManagerActions/BanUserResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint BanUser(int idPlayerBanned, int idUserBanning);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/BanUser", ReplyAction="http://tempuri.org/IFriendManagerActions/BanUserResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> BanUserAsync(int idPlayerBanned, int idUserBanning);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/EliminateUserFromFriends")]
        void EliminateUserFromFriends(int idPlayerDeleting, int idUserToEliminate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/EliminateUserFromFriends")]
        System.Threading.Tasks.Task EliminateUserFromFriendsAsync(int idPlayerDeleting, int idUserToEliminate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/SendFriendRequest")]
        void SendFriendRequest(int idPLayerRequesting, int idUserRequested);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/SendFriendRequest")]
        System.Threading.Tasks.Task SendFriendRequestAsync(int idPLayerRequesting, int idUserRequested);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/AcceptFriendRequest")]
        void AcceptFriendRequest(int idPlayerAccepting, int idUserRequesting);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/AcceptFriendRequest")]
        System.Threading.Tasks.Task AcceptFriendRequestAsync(int idPlayerAccepting, int idUserRequesting);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/DeclineFriendRequest")]
        void DeclineFriendRequest(int idPlayerDeclining, int idUserRequesting);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendManagerActions/DeclineFriendRequest")]
        System.Threading.Tasks.Task DeclineFriendRequestAsync(int idPlayerDeclining, int idUserRequesting);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendManagerActionsCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/ResponseReported", ReplyAction="http://tempuri.org/IFriendManagerActions/ResponseReportedResponse")]
        void ResponseReported(int numReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/ResponseEliminationFromFriends", ReplyAction="http://tempuri.org/IFriendManagerActions/ResponseEliminationFromFriendsResponse")]
        void ResponseEliminationFromFriends(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendManagerActions/ResponseRequestAction", ReplyAction="http://tempuri.org/IFriendManagerActions/ResponseRequestActionResponse")]
        void ResponseRequestAction(int idUser, int requestStatus, string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendManagerActionsChannel : JeopardyGame.ServidorServiciosJeopardy.IFriendManagerActions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendManagerActionsClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.IFriendManagerActions>, JeopardyGame.ServidorServiciosJeopardy.IFriendManagerActions {
        
        public FriendManagerActionsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FriendManagerActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FriendManagerActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendManagerActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendManagerActionsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint RegisterFriendManagerUser(int idUserFriendManager) {
            return base.Channel.RegisterFriendManagerUser(idUserFriendManager);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> RegisterFriendManagerUserAsync(int idUserFriendManager) {
            return base.Channel.RegisterFriendManagerUserAsync(idUserFriendManager);
        }
        
        public void UnregisterFriendManagerUser(int idUserFriendManager) {
            base.Channel.UnregisterFriendManagerUser(idUserFriendManager);
        }
        
        public System.Threading.Tasks.Task UnregisterFriendManagerUserAsync(int idUserFriendManager) {
            return base.Channel.UnregisterFriendManagerUserAsync(idUserFriendManager);
        }
        
        public void ReportPlayer(int idUser, string userName) {
            base.Channel.ReportPlayer(idUser, userName);
        }
        
        public System.Threading.Tasks.Task ReportPlayerAsync(int idUser, string userName) {
            return base.Channel.ReportPlayerAsync(idUser, userName);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint BanUser(int idPlayerBanned, int idUserBanning) {
            return base.Channel.BanUser(idPlayerBanned, idUserBanning);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> BanUserAsync(int idPlayerBanned, int idUserBanning) {
            return base.Channel.BanUserAsync(idPlayerBanned, idUserBanning);
        }
        
        public void EliminateUserFromFriends(int idPlayerDeleting, int idUserToEliminate) {
            base.Channel.EliminateUserFromFriends(idPlayerDeleting, idUserToEliminate);
        }
        
        public System.Threading.Tasks.Task EliminateUserFromFriendsAsync(int idPlayerDeleting, int idUserToEliminate) {
            return base.Channel.EliminateUserFromFriendsAsync(idPlayerDeleting, idUserToEliminate);
        }
        
        public void SendFriendRequest(int idPLayerRequesting, int idUserRequested) {
            base.Channel.SendFriendRequest(idPLayerRequesting, idUserRequested);
        }
        
        public System.Threading.Tasks.Task SendFriendRequestAsync(int idPLayerRequesting, int idUserRequested) {
            return base.Channel.SendFriendRequestAsync(idPLayerRequesting, idUserRequested);
        }
        
        public void AcceptFriendRequest(int idPlayerAccepting, int idUserRequesting) {
            base.Channel.AcceptFriendRequest(idPlayerAccepting, idUserRequesting);
        }
        
        public System.Threading.Tasks.Task AcceptFriendRequestAsync(int idPlayerAccepting, int idUserRequesting) {
            return base.Channel.AcceptFriendRequestAsync(idPlayerAccepting, idUserRequesting);
        }
        
        public void DeclineFriendRequest(int idPlayerDeclining, int idUserRequesting) {
            base.Channel.DeclineFriendRequest(idPlayerDeclining, idUserRequesting);
        }
        
        public System.Threading.Tasks.Task DeclineFriendRequestAsync(int idPlayerDeclining, int idUserRequesting) {
            return base.Channel.DeclineFriendRequestAsync(idPlayerDeclining, idUserRequesting);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IValidateUserExistance")]
    public interface IValidateUserExistance {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidateUserExistance/UserAlreadyExist", ReplyAction="http://tempuri.org/IValidateUserExistance/UserAlreadyExistResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UserAlreadyExist(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidateUserExistance/UserAlreadyExist", ReplyAction="http://tempuri.org/IValidateUserExistance/UserAlreadyExistResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UserAlreadyExistAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidateUserExistance/EmailAlreadyExist", ReplyAction="http://tempuri.org/IValidateUserExistance/EmailAlreadyExistResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint EmailAlreadyExist(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidateUserExistance/EmailAlreadyExist", ReplyAction="http://tempuri.org/IValidateUserExistance/EmailAlreadyExistResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> EmailAlreadyExistAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IValidateUserExistanceChannel : JeopardyGame.ServidorServiciosJeopardy.IValidateUserExistance, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserExistanceClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IValidateUserExistance>, JeopardyGame.ServidorServiciosJeopardy.IValidateUserExistance {
        
        public ValidateUserExistanceClient() {
        }
        
        public ValidateUserExistanceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ValidateUserExistanceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidateUserExistanceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidateUserExistanceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint UserAlreadyExist(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser) {
            return base.Channel.UserAlreadyExist(newUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> UserAlreadyExistAsync(JeopardyGame.ServidorServiciosJeopardy.UserPOJO newUser) {
            return base.Channel.UserAlreadyExistAsync(newUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint EmailAlreadyExist(string email) {
            return base.Channel.EmailAlreadyExist(email);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> EmailAlreadyExistAsync(string email) {
            return base.Channel.EmailAlreadyExistAsync(email);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.ILobbyActions", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.ILobbyActionsCallback))]
    public interface ILobbyActions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/CreateNewLobby", ReplyAction="http://tempuri.org/ILobbyActions/CreateNewLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint CreateNewLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/CreateNewLobby", ReplyAction="http://tempuri.org/ILobbyActions/CreateNewLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> CreateNewLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobby", ReplyAction="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 GetAllCurrentPlayerInLobby(int roomCode, int idUserRequesting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobby", ReplyAction="http://tempuri.org/ILobbyActions/GetAllCurrentPlayerInLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4> GetAllCurrentPlayerInLobbyAsync(int roomCode, int idUserRequesting);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/DissolveLobby")]
        void DissolveLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/DissolveLobby")]
        System.Threading.Tasks.Task DissolveLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/JoinIntoLobby", ReplyAction="http://tempuri.org/ILobbyActions/JoinIntoLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint JoinIntoLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/JoinIntoLobby", ReplyAction="http://tempuri.org/ILobbyActions/JoinIntoLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> JoinIntoLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/NotifyPlayerInLobby")]
        void NotifyPlayerInLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/NotifyPlayerInLobby")]
        System.Threading.Tasks.Task NotifyPlayerInLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/LeaveLobby")]
        void LeaveLobby(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/LeaveLobby")]
        System.Threading.Tasks.Task LeaveLobbyAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/ChangePlayerSide")]
        void ChangePlayerSide(int roomCode, int idUserToChangeTeam, int newSideTeam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/ChangePlayerSide")]
        System.Threading.Tasks.Task ChangePlayerSideAsync(int roomCode, int idUserToChangeTeam, int newSideTeam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/EliminatePlayerFromMatch")]
        void EliminatePlayerFromMatch(int roomCode, int idUserToEliminate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/EliminatePlayerFromMatch")]
        System.Threading.Tasks.Task EliminatePlayerFromMatchAsync(int roomCode, int idUserToEliminate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/MakeTeams")]
        void MakeTeams(int roomCode, int idUser, bool wannaTeam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/MakeTeams")]
        System.Threading.Tasks.Task MakeTeamsAsync(int roomCode, int idUser, bool wannaTeam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/SelectQuestionsForGame")]
        void SelectQuestionsForGame(int roomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/SelectQuestionsForGame")]
        System.Threading.Tasks.Task SelectQuestionsForGameAsync(int roomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/StartGame")]
        void StartGame(int roomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/StartGame")]
        System.Threading.Tasks.Task StartGameAsync(int roomCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyActionsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/UpdateJoinedPlayerResponse")]
        void UpdateJoinedPlayerResponse(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 playersInTheLobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/MakeTeamsResponse", ReplyAction="http://tempuri.org/ILobbyActions/MakeTeamsResponseResponse")]
        void MakeTeamsResponse(bool teamUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/UpdateTeamSide", ReplyAction="http://tempuri.org/ILobbyActions/UpdateTeamSideResponse")]
        void UpdateTeamSide(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 playersInTheLobby);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyActions/DissolvingLobby")]
        void DissolvingLobby();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/NotifyQuestionsAreReady", ReplyAction="http://tempuri.org/ILobbyActions/NotifyQuestionsAreReadyResponse")]
        void NotifyQuestionsAreReady(int codeEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyActions/NotifyGameWillStart", ReplyAction="http://tempuri.org/ILobbyActions/NotifyGameWillStartResponse")]
        void NotifyGameWillStart(JeopardyGame.ServidorServiciosJeopardy.QuestionCardInformation[] questionsForGame);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyActionsChannel : JeopardyGame.ServidorServiciosJeopardy.ILobbyActions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyActionsClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.ILobbyActions>, JeopardyGame.ServidorServiciosJeopardy.ILobbyActions {
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyActionsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint CreateNewLobby(int roomCode, int idUser) {
            return base.Channel.CreateNewLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> CreateNewLobbyAsync(int roomCode, int idUser) {
            return base.Channel.CreateNewLobbyAsync(roomCode, idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4 GetAllCurrentPlayerInLobby(int roomCode, int idUserRequesting) {
            return base.Channel.GetAllCurrentPlayerInLobby(roomCode, idUserRequesting);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfPlayerInLobbyxY0a3WX4> GetAllCurrentPlayerInLobbyAsync(int roomCode, int idUserRequesting) {
            return base.Channel.GetAllCurrentPlayerInLobbyAsync(roomCode, idUserRequesting);
        }
        
        public void DissolveLobby(int roomCode, int idUser) {
            base.Channel.DissolveLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task DissolveLobbyAsync(int roomCode, int idUser) {
            return base.Channel.DissolveLobbyAsync(roomCode, idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint JoinIntoLobby(int roomCode, int idUser) {
            return base.Channel.JoinIntoLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> JoinIntoLobbyAsync(int roomCode, int idUser) {
            return base.Channel.JoinIntoLobbyAsync(roomCode, idUser);
        }
        
        public void NotifyPlayerInLobby(int roomCode, int idUser) {
            base.Channel.NotifyPlayerInLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task NotifyPlayerInLobbyAsync(int roomCode, int idUser) {
            return base.Channel.NotifyPlayerInLobbyAsync(roomCode, idUser);
        }
        
        public void LeaveLobby(int roomCode, int idUser) {
            base.Channel.LeaveLobby(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task LeaveLobbyAsync(int roomCode, int idUser) {
            return base.Channel.LeaveLobbyAsync(roomCode, idUser);
        }
        
        public void ChangePlayerSide(int roomCode, int idUserToChangeTeam, int newSideTeam) {
            base.Channel.ChangePlayerSide(roomCode, idUserToChangeTeam, newSideTeam);
        }
        
        public System.Threading.Tasks.Task ChangePlayerSideAsync(int roomCode, int idUserToChangeTeam, int newSideTeam) {
            return base.Channel.ChangePlayerSideAsync(roomCode, idUserToChangeTeam, newSideTeam);
        }
        
        public void EliminatePlayerFromMatch(int roomCode, int idUserToEliminate) {
            base.Channel.EliminatePlayerFromMatch(roomCode, idUserToEliminate);
        }
        
        public System.Threading.Tasks.Task EliminatePlayerFromMatchAsync(int roomCode, int idUserToEliminate) {
            return base.Channel.EliminatePlayerFromMatchAsync(roomCode, idUserToEliminate);
        }
        
        public void MakeTeams(int roomCode, int idUser, bool wannaTeam) {
            base.Channel.MakeTeams(roomCode, idUser, wannaTeam);
        }
        
        public System.Threading.Tasks.Task MakeTeamsAsync(int roomCode, int idUser, bool wannaTeam) {
            return base.Channel.MakeTeamsAsync(roomCode, idUser, wannaTeam);
        }
        
        public void SelectQuestionsForGame(int roomCode) {
            base.Channel.SelectQuestionsForGame(roomCode);
        }
        
        public System.Threading.Tasks.Task SelectQuestionsForGameAsync(int roomCode) {
            return base.Channel.SelectQuestionsForGameAsync(roomCode);
        }
        
        public void StartGame(int roomCode) {
            base.Channel.StartGame(roomCode);
        }
        
        public System.Threading.Tasks.Task StartGameAsync(int roomCode) {
            return base.Channel.StartGameAsync(roomCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.ILiveChat", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.ILiveChatCallback))]
    public interface ILiveChat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiveChat/SendMessage")]
        void SendMessage(int idUser, int roomCode, string userName, string messageToSend);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiveChat/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(int idUser, int roomCode, string userName, string messageToSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveChat/GetAllMessages", ReplyAction="http://tempuri.org/ILiveChat/GetAllMessagesResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfMessageChatxY0a3WX4 GetAllMessages(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveChat/GetAllMessages", ReplyAction="http://tempuri.org/ILiveChat/GetAllMessagesResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfMessageChatxY0a3WX4> GetAllMessagesAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiveChat/DeleteChat")]
        void DeleteChat(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILiveChat/DeleteChat")]
        System.Threading.Tasks.Task DeleteChatAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveChat/CreateChatForLobby", ReplyAction="http://tempuri.org/ILiveChat/CreateChatForLobbyResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfboolean CreateChatForLobby(int roomCode, int idAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveChat/CreateChatForLobby", ReplyAction="http://tempuri.org/ILiveChat/CreateChatForLobbyResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfboolean> CreateChatForLobbyAsync(int roomCode, int idAdmin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveChat/ReceiveMessage", ReplyAction="http://tempuri.org/ILiveChat/ReceiveMessageResponse")]
        void ReceiveMessage(JeopardyGame.ServidorServiciosJeopardy.GenericClassOfMessageChatxY0a3WX4 message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveChatChannel : JeopardyGame.ServidorServiciosJeopardy.ILiveChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiveChatClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.ILiveChat>, JeopardyGame.ServidorServiciosJeopardy.ILiveChat {
        
        public LiveChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LiveChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LiveChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiveChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LiveChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(int idUser, int roomCode, string userName, string messageToSend) {
            base.Channel.SendMessage(idUser, roomCode, userName, messageToSend);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(int idUser, int roomCode, string userName, string messageToSend) {
            return base.Channel.SendMessageAsync(idUser, roomCode, userName, messageToSend);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfMessageChatxY0a3WX4 GetAllMessages(int roomCode, int idUser) {
            return base.Channel.GetAllMessages(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfArrayOfMessageChatxY0a3WX4> GetAllMessagesAsync(int roomCode, int idUser) {
            return base.Channel.GetAllMessagesAsync(roomCode, idUser);
        }
        
        public void DeleteChat(int roomCode, int idUser) {
            base.Channel.DeleteChat(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task DeleteChatAsync(int roomCode, int idUser) {
            return base.Channel.DeleteChatAsync(roomCode, idUser);
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfboolean CreateChatForLobby(int roomCode, int idAdmin) {
            return base.Channel.CreateChatForLobby(roomCode, idAdmin);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfboolean> CreateChatForLobbyAsync(int roomCode, int idAdmin) {
            return base.Channel.CreateChatForLobbyAsync(roomCode, idAdmin);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IGameActions", CallbackContract=typeof(JeopardyGame.ServidorServiciosJeopardy.IGameActionsCallback))]
    public interface IGameActions {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/SubscribeToGameCallBack")]
        void SubscribeToGameCallBack(int roomCode, int idUserSubscribing, int idAvatar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/SubscribeToGameCallBack")]
        System.Threading.Tasks.Task SubscribeToGameCallBackAsync(int roomCode, int idUserSubscribing, int idAvatar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/UnSubscribeFromGameCallBack")]
        void UnSubscribeFromGameCallBack(int roomCode, int idUserUnsubscribing);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/UnSubscribeFromGameCallBack")]
        System.Threading.Tasks.Task UnSubscribeFromGameCallBackAsync(int roomCode, int idUserUnsubscribing);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ChooseQuestionOfBoard")]
        void ChooseQuestionOfBoard(int roomCode, int idUserSelecting, int currentRound, JeopardyGame.ServidorServiciosJeopardy.CurrentQuestionToShowContract questionToShow);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ChooseQuestionOfBoard")]
        System.Threading.Tasks.Task ChooseQuestionOfBoardAsync(int roomCode, int idUserSelecting, int currentRound, JeopardyGame.ServidorServiciosJeopardy.CurrentQuestionToShowContract questionToShow);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ChooseAnswer")]
        void ChooseAnswer(int roomCode, int idUserSelecting, int answerSelected, int pointsWorth, int currentTurn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ChooseAnswer")]
        System.Threading.Tasks.Task ChooseAnswerAsync(int roomCode, int idUserSelecting, int answerSelected, int pointsWorth, int currentTurn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/FinishRound")]
        void FinishRound(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame, int roundFinished);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/FinishRound")]
        System.Threading.Tasks.Task FinishRoundAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame, int roundFinished);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/FinishGame")]
        void FinishGame(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/FinishGame")]
        System.Threading.Tasks.Task FinishGameAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ConfirmBet")]
        void ConfirmBet(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ConfirmBet")]
        System.Threading.Tasks.Task ConfirmBetAsync(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ConfirmLastQuestionAnswer")]
        void ConfirmLastQuestionAnswer(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract playerAnswering, int points, bool isCorrect);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ConfirmLastQuestionAnswer")]
        System.Threading.Tasks.Task ConfirmLastQuestionAnswerAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract playerAnswering, int points, bool isCorrect);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameActionsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ReceiveNotificationEverybodyIsPlaying")]
        void ReceiveNotificationEverybodyIsPlaying(bool isEveryBodyPlaying, int isYourTurn, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ReceiveNotificationSomeOneLeft")]
        void ReceiveNotificationSomeOneLeft(int isYourTurn, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameActions/ReceiveNotificationAboutTurn", ReplyAction="http://tempuri.org/IGameActions/ReceiveNotificationAboutTurnResponse")]
        void ReceiveNotificationAboutTurn(int isYourTurn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseSomeOneSelectAQuestion")]
        void ResponseSomeOneSelectAQuestion(JeopardyGame.ServidorServiciosJeopardy.CurrentQuestionToShowContract questionToShow, int currentRound, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseSomeOneChooseAnAnswer")]
        void ResponseSomeOneChooseAnAnswer(int idAnswerSelected, int idUserAnswering, int pointsWorth);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseBeginRound")]
        void ResponseBeginRound(int isYourTurn, int roundToStart, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGam);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseShowWinner")]
        void ResponseShowWinner(JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseFinishGame")]
        void ResponseFinishGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameActions/ResponseShowLastQuestion")]
        void ResponseShowLastQuestion();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameActionsChannel : JeopardyGame.ServidorServiciosJeopardy.IGameActions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameActionsClient : System.ServiceModel.DuplexClientBase<JeopardyGame.ServidorServiciosJeopardy.IGameActions>, JeopardyGame.ServidorServiciosJeopardy.IGameActions {
        
        public GameActionsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameActionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameActionsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SubscribeToGameCallBack(int roomCode, int idUserSubscribing, int idAvatar) {
            base.Channel.SubscribeToGameCallBack(roomCode, idUserSubscribing, idAvatar);
        }
        
        public System.Threading.Tasks.Task SubscribeToGameCallBackAsync(int roomCode, int idUserSubscribing, int idAvatar) {
            return base.Channel.SubscribeToGameCallBackAsync(roomCode, idUserSubscribing, idAvatar);
        }
        
        public void UnSubscribeFromGameCallBack(int roomCode, int idUserUnsubscribing) {
            base.Channel.UnSubscribeFromGameCallBack(roomCode, idUserUnsubscribing);
        }
        
        public System.Threading.Tasks.Task UnSubscribeFromGameCallBackAsync(int roomCode, int idUserUnsubscribing) {
            return base.Channel.UnSubscribeFromGameCallBackAsync(roomCode, idUserUnsubscribing);
        }
        
        public void ChooseQuestionOfBoard(int roomCode, int idUserSelecting, int currentRound, JeopardyGame.ServidorServiciosJeopardy.CurrentQuestionToShowContract questionToShow) {
            base.Channel.ChooseQuestionOfBoard(roomCode, idUserSelecting, currentRound, questionToShow);
        }
        
        public System.Threading.Tasks.Task ChooseQuestionOfBoardAsync(int roomCode, int idUserSelecting, int currentRound, JeopardyGame.ServidorServiciosJeopardy.CurrentQuestionToShowContract questionToShow) {
            return base.Channel.ChooseQuestionOfBoardAsync(roomCode, idUserSelecting, currentRound, questionToShow);
        }
        
        public void ChooseAnswer(int roomCode, int idUserSelecting, int answerSelected, int pointsWorth, int currentTurn) {
            base.Channel.ChooseAnswer(roomCode, idUserSelecting, answerSelected, pointsWorth, currentTurn);
        }
        
        public System.Threading.Tasks.Task ChooseAnswerAsync(int roomCode, int idUserSelecting, int answerSelected, int pointsWorth, int currentTurn) {
            return base.Channel.ChooseAnswerAsync(roomCode, idUserSelecting, answerSelected, pointsWorth, currentTurn);
        }
        
        public void FinishRound(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame, int roundFinished) {
            base.Channel.FinishRound(roomCode, playerInGame, roundFinished);
        }
        
        public System.Threading.Tasks.Task FinishRoundAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame, int roundFinished) {
            return base.Channel.FinishRoundAsync(roomCode, playerInGame, roundFinished);
        }
        
        public void FinishGame(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame) {
            base.Channel.FinishGame(roomCode, playerInGame);
        }
        
        public System.Threading.Tasks.Task FinishGameAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract[] playerInGame) {
            return base.Channel.FinishGameAsync(roomCode, playerInGame);
        }
        
        public void ConfirmBet(int roomCode, int idUser) {
            base.Channel.ConfirmBet(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task ConfirmBetAsync(int roomCode, int idUser) {
            return base.Channel.ConfirmBetAsync(roomCode, idUser);
        }
        
        public void ConfirmLastQuestionAnswer(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract playerAnswering, int points, bool isCorrect) {
            base.Channel.ConfirmLastQuestionAnswer(roomCode, playerAnswering, points, isCorrect);
        }
        
        public System.Threading.Tasks.Task ConfirmLastQuestionAnswerAsync(int roomCode, JeopardyGame.ServidorServiciosJeopardy.PlayerInGameDataContract playerAnswering, int points, bool isCorrect) {
            return base.Channel.ConfirmLastQuestionAnswerAsync(roomCode, playerAnswering, points, isCorrect);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.ILobbyCodeAuthentication")]
    public interface ILobbyCodeAuthentication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyCodeAuthentication/VerifyRoomCodeExist", ReplyAction="http://tempuri.org/ILobbyCodeAuthentication/VerifyRoomCodeExistResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint VerifyRoomCodeExist(int roomCode, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyCodeAuthentication/VerifyRoomCodeExist", ReplyAction="http://tempuri.org/ILobbyCodeAuthentication/VerifyRoomCodeExistResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> VerifyRoomCodeExistAsync(int roomCode, int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyCodeAuthenticationChannel : JeopardyGame.ServidorServiciosJeopardy.ILobbyCodeAuthentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyCodeAuthenticationClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.ILobbyCodeAuthentication>, JeopardyGame.ServidorServiciosJeopardy.ILobbyCodeAuthentication {
        
        public LobbyCodeAuthenticationClient() {
        }
        
        public LobbyCodeAuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LobbyCodeAuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyCodeAuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyCodeAuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint VerifyRoomCodeExist(int roomCode, int idUser) {
            return base.Channel.VerifyRoomCodeExist(roomCode, idUser);
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfint> VerifyRoomCodeExistAsync(int roomCode, int idUser) {
            return base.Channel.VerifyRoomCodeExistAsync(roomCode, idUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IGuestPlayerManager")]
    public interface IGuestPlayerManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGuestPlayerManager/CreateUserForGuest", ReplyAction="http://tempuri.org/IGuestPlayerManager/CreateUserForGuestResponse")]
        JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 CreateUserForGuest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGuestPlayerManager/CreateUserForGuest", ReplyAction="http://tempuri.org/IGuestPlayerManager/CreateUserForGuestResponse")]
        System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> CreateUserForGuestAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGuestPlayerManager/DeleteGuest")]
        void DeleteGuest(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGuestPlayerManager/DeleteGuest")]
        System.Threading.Tasks.Task DeleteGuestAsync(int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGuestPlayerManagerChannel : JeopardyGame.ServidorServiciosJeopardy.IGuestPlayerManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GuestPlayerManagerClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IGuestPlayerManager>, JeopardyGame.ServidorServiciosJeopardy.IGuestPlayerManager {
        
        public GuestPlayerManagerClient() {
        }
        
        public GuestPlayerManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GuestPlayerManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GuestPlayerManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GuestPlayerManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4 CreateUserForGuest() {
            return base.Channel.CreateUserForGuest();
        }
        
        public System.Threading.Tasks.Task<JeopardyGame.ServidorServiciosJeopardy.GenericClassOfUserPOJOxY0a3WX4> CreateUserForGuestAsync() {
            return base.Channel.CreateUserForGuestAsync();
        }
        
        public void DeleteGuest(int idUser) {
            base.Channel.DeleteGuest(idUser);
        }
        
        public System.Threading.Tasks.Task DeleteGuestAsync(int idUser) {
            return base.Channel.DeleteGuestAsync(idUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServiciosJeopardy.IHeartBeat")]
    public interface IHeartBeat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHeartBeat/Heartbeat")]
        void Heartbeat();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHeartBeat/Heartbeat")]
        System.Threading.Tasks.Task HeartbeatAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHeartBeatChannel : JeopardyGame.ServidorServiciosJeopardy.IHeartBeat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeartBeatClient : System.ServiceModel.ClientBase<JeopardyGame.ServidorServiciosJeopardy.IHeartBeat>, JeopardyGame.ServidorServiciosJeopardy.IHeartBeat {
        
        public HeartBeatClient() {
        }
        
        public HeartBeatClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HeartBeatClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeartBeatClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeartBeatClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Heartbeat() {
            base.Channel.Heartbeat();
        }
        
        public System.Threading.Tasks.Task HeartbeatAsync() {
            return base.Channel.HeartbeatAsync();
        }
    }
}
